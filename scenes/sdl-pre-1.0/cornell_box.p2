## camera(pinhole) [real fov-degree 50] [vector3 position "0 0 16"] [vector3 direction "0 0 -1"] [vector3 up-axis "0 1 0"]
## sample-generator(stratified) [integer sample-amount 40]
## renderer(equal-sampling) [integer width 512][integer height 512][string filter-name gaussian][string estimator bneept]

-> geometry(rectangle) @boxWall [real width 1] [real height 1]

// top light
-> light-source(rectangle) @topLightSource1 [vector3 linear-srgb "1 1 1"][real watts 500][real width 3][real height 3]
-> actor(light) @topLight1 [light-source light-source @topLightSource1]
-> actor(light) translate(@topLight1) [string type translate] [actor-light target @topLight1] [vector3 factor "0 4.75 0"]
-> actor(light) rotate(@topLight1) [vector3 axis "1 0 0"] [real degree 90]

// left wall
-> material(matte-opaque) @leftWallMaterial [vector3 albedo "0.85 0.3 0.3"]
-> actor(model) @leftWall [geometry geometry @boxWall] [material material @leftWallMaterial]
-> actor(model) translate(@leftWall) [vector3 factor "-5 0 0"]
-> actor(model) rotate(@leftWall)    [vector3 axis "0 1 0"] [real degree 90]
-> actor(model) scale(@leftWall)     [vector3 factor "10 10 10"]

// right wall
-> material(matte-opaque) @rightWallMaterial [vector3 albedo "0.3 0.3 0.85"]
-> actor(model) @rightWall [geometry geometry @boxWall] [material material @rightWallMaterial]
-> actor(model) translate(@rightWall) [vector3 factor "5 0 0"]
-> actor(model) rotate(@rightWall)    [vector3 axis "0 1 0"] [real degree -90]
-> actor(model) scale(@rightWall)     [vector3 factor "10 10 10"]

// top wall
-> material(matte-opaque) @topWallMaterial [vector3 albedo "0.7 0.7 0.7"]
-> actor(model) @topWall [geometry geometry @boxWall] [material material @topWallMaterial]
-> actor(model) translate(@topWall) [vector3 factor "0 5 0"]
-> actor(model) rotate(@topWall)    [vector3 axis "1 0 0"] [real degree 90]
-> actor(model) scale(@topWall)     [vector3 factor "10 10 10"]

// bottom wall
-> material(matte-opaque) @bottomWallMaterial [vector3 albedo "0.7 0.7 0.7"]
-> actor(model) @bottomWall [geometry geometry @boxWall] [material material @bottomWallMaterial]
-> actor(model) translate(@bottomWall) [vector3 factor "0 -5 0"]
-> actor(model) rotate(@bottomWall)    [vector3 axis "1 0 0"] [real degree -90]
-> actor(model) scale(@bottomWall)     [vector3 factor "10 10 10"]

// back wall
-> material(matte-opaque) @backWallMaterial [vector3 albedo "0.7 0.7 0.7"]
-> actor(model) @backWall [geometry geometry @boxWall] [material material @backWallMaterial]
-> actor(model) translate(@backWall) [vector3 factor "0 0 -5"]
-> actor(model) scale(@backWall)     [vector3 factor "10 10 10"]

-> material(abraded-opaque) @goldMaterial [string type iso-metallic-ggx] [real roughness 0.0] [vector3 f0 "1.0 0.765557 0.336057"]

// metal object
-> geometry(sphere) @metalGeometry [real radius 2.5]
-> actor(model) @metalModel [geometry geometry @metalGeometry] [material material @goldMaterial]
-> actor(model) translate(@metalModel) [vector3 factor "0 -2.5 0"]